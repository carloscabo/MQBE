{"version":3,"sources":["mqbe.js"],"names":["debounced_resize","c","t","onresize","clearTimeout","setTimeout","MQBE","v","data","mq_supported","current_state","previous_state","init","this","detect_mq_support","get_current_state","events","enter","leave","check_state","length","i","len","state","window","getComputedStyle","document","body","getPropertyValue","replace","matchMedia","msMatchMedia","on","action","code","push","off","addEventListener","event"],"mappings":";;;;;;;;;;;;AAiGA,QAAAA,kBAAAC,EAAAC,GAAA,MAAAC,UAAA,WAAAC,aAAAF,GAAAA,EAAAG,WAAAJ,EAAA,MAAAA,EAjGA,GAAAK,OAEAC,EAAA,OAEAC,MACAC,cAAA,EACAC,cAAA,KACAC,eAAA,MAGAC,KAAA,WACAC,KAAAC,oBACAD,KAAAL,KAAAE,cAAAG,KAAAE,oBACAF,KAAAL,KAAAG,eAAAE,KAAAL,KAAAE,eAIAM,QACAC,SACAC,UAIAC,YAAA,WAEA,GADAN,KAAAL,KAAAE,cAAAG,KAAAE,oBACAF,KAAAL,KAAAG,iBAAAE,KAAAL,KAAAE,cAAA,CAEA,GAAA,mBAAAG,MAAAG,OAAAE,MAAAL,KAAAL,KAAAG,iBAAA,OAAAE,KAAAG,OAAAE,MAAAL,KAAAL,KAAAG,iBAAAE,KAAAG,OAAAE,MAAAL,KAAAL,KAAAG,gBAAAS,OAAA,EAEA,IAAAC,EAAA,EAAAC,IAAAT,KAAAG,OAAAE,MAAAL,KAAAL,KAAAG,gBAAAS,OAAAC,EAAAC,IAAAD,IACAR,KAAAG,OAAAE,MAAAL,KAAAL,KAAAG,gBAAAU,IAGA,IAAA,mBAAAR,MAAAG,OAAAC,MAAAJ,KAAAL,KAAAE,gBAAAG,KAAAG,OAAAC,MAAAJ,KAAAL,KAAAE,eAAAU,OAAA,EAEA,IAAAC,EAAA,EAAAC,IAAAT,KAAAG,OAAAC,MAAAJ,KAAAL,KAAAE,eAAAU,OAAAC,EAAAC,IAAAD,IACAR,KAAAG,OAAAC,MAAAJ,KAAAL,KAAAE,eAAAW,IAGAR,MAAAL,KAAAG,eAAAE,KAAAL,KAAAE,gBAIAK,kBAAA,WACA,GAAAQ,GAAAC,OAAAC,iBAAAC,SAAAC,KAAA,UAAAC,iBAAA,UAEA,OADAL,GAAAA,EAAAM,QAAA,QAAA,KAKAf,kBAAA,WAIA,OAHA,mBAAAU,QAAAM,YAAA,mBAAAN,QAAAO,gBACAlB,KAAAL,KAAAC,cAAA,GAEAI,KAAAL,KAAAC,cAIAuB,GAAA,SAAAC,EAAAV,EAAAW,GASA,MARA,mBAAArB,MAAAG,OAAAiB,GAAAV,KACAV,KAAAG,OAAAiB,GAAAV,OAGAA,IAAAV,KAAAL,KAAAE,eAAA,UAAAuB,GACAC,IAEArB,KAAAG,OAAAiB,GAAAV,GAAAY,KAAAD,GACArB,MAIAuB,IAAA,SAAAH,EAAAV,GAIA,MAHA,mBAAAV,MAAAG,OAAAiB,GAAAV,KACAV,KAAAG,OAAAiB,GAAAV,GAAAH,OAAA,GAEAP,MAMAa,UAAAW,kBACAX,SAAAW,iBAAA,mBAAA,SAAAC,GAEAhC,KAAAM,OAGAN,KAAAE,KAAAC,cACAT,iBAAA,WACAM,KAAAa","file":"mqbe.js","sourcesContent":["/*!\n * Media Query breakpoints events (MQBE) 1.0.5\n * Small lib that fires events when you enter / leave a CSS mediaquery.\n * \n * https://github.com/carloscabo/MQBE\n * \n * Copyright 2015, Carlos Cabo\n * \n * Licensed under MIT\n * \n * Released on: November 29, 2015\n */\n\nvar MQBE = {\n\n  v: '1.04',\n\n  data: {\n    mq_supported: false,\n    current_state: null,\n    previous_state: null\n  },\n\n  init: function() {\n    this.detect_mq_support();\n    this.data.current_state = this.get_current_state();\n    this.data.previous_state = this.data.current_state;\n  },\n\n  // Event queue\n  events: {\n    enter: {},\n    leave: {}\n  },\n\n  // If state changed sets the data vars and tries to launch the callback (if exists)\n  check_state: function () {\n    this.data.current_state = this.get_current_state();\n    if ( this.data.previous_state !== this.data.current_state) {\n      // If there are on-leave actions fire them\n      if ( typeof this.events.leave[this.data.previous_state] !== 'undefined' && this.events.leave[this.data.previous_state] !== null && this.events.leave[this.data.previous_state].length > 0) {\n        // Launch all events in queue\n        for (i = 0, len = this.events.leave[this.data.previous_state].length; i < len; i++) {\n          this.events.leave[this.data.previous_state][i]();\n        }\n      }\n      if (typeof this.events.enter[this.data.current_state] !== 'undefined' && this.events.enter[this.data.current_state].length > 0) {\n        // Launch all events in queue\n        for (i = 0, len = this.events.enter[this.data.current_state].length; i < len; i++) {\n          this.events.enter[this.data.current_state][i]();\n        }\n      }\n      this.data.previous_state = this.data.current_state;\n    }\n  },\n\n  get_current_state: function () {\n    var state = window.getComputedStyle(document.body,':after').getPropertyValue('content');\n    state = state.replace( /[\"']/g,''); // Firefox / Chrome 43 bugfix\n    return state;\n  },\n\n  // Has the browser mediaqueries support?\n  detect_mq_support: function() {\n    if(typeof window.matchMedia !== 'undefined' || typeof window.msMatchMedia !== 'undefined') {\n      this.data.mq_supported = true;\n    }\n    return this.data.mq_supported;\n  },\n\n  // Add evento to the queue!\n  on: function( action, state, code) {\n    if (typeof this.events[action][state] === 'undefined') {\n      this.events[action][state] = [];\n    }\n    // If event added in current state and \"enter\"\n    if (state === this.data.current_state && action === 'enter') {\n      code();\n    }\n    this.events[action][state].push(code);\n    return this;\n  },\n\n  // Clear event for state evento to the queue!\n  off: function( action, state) {\n    if (typeof this.events[action][state] !== 'undefined') {\n      this.events[action][state].length = 0;\n    }\n    return this;\n  }\n\n}; //MQBE\n\n// Self init IE9+ $.documentready\nif (document.addEventListener) {\n  document.addEventListener('DOMContentLoaded', function(event) {\n    // La magia aquÃ­!\n    MQBE.init();\n\n    // Start listener ASAP if mq are supported\n    if (MQBE.data.mq_supported) {\n      debounced_resize(function() {\n        MQBE.check_state();\n      });\n    }\n  });\n}\n\n// Debounced resize\n// https://github.com/louisremi/jquery-smartresize/\nfunction debounced_resize(c,t){onresize=function(){clearTimeout(t);t=setTimeout(c,100);};return c;}\n\n/*\nMQBE.on('enter', 'tablet', function() {\n  console.log('Enter mediaquery: '+this.data.current_state);\n});\n\nMQBE.on('enter', 'tablet', function() {\n  console.log('Leave mediaquery: '+this.data.current_state);\n});\n*/\n"],"sourceRoot":"/source/"}